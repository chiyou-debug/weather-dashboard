{"ast":null,"code":"'use client';\n\nimport { parseThemeColor } from '../../core/MantineProvider/color-functions/parse-theme-color/parse-theme-color.mjs';\nfunction getMarkColor(_ref) {\n  let {\n    color,\n    theme,\n    defaultShade\n  } = _ref;\n  const parsed = parseThemeColor({\n    color,\n    theme\n  });\n  if (!parsed.isThemeColor) {\n    return color;\n  }\n  if (parsed.shade === void 0) {\n    return \"var(--mantine-color-\".concat(parsed.color, \"-\").concat(defaultShade, \")\");\n  }\n  return \"var(\".concat(parsed.variable, \")\");\n}\nexport { getMarkColor };","map":{"version":3,"names":["getMarkColor","_ref","color","theme","defaultShade","parsed","parseThemeColor","isThemeColor","shade","concat","variable"],"sources":["/home/alan/code/my-weather-dashboard/node_modules/@mantine/core/src/components/Mark/get-mark-color.ts"],"sourcesContent":["import { MantineColor, MantineTheme, parseThemeColor } from '../../core';\n\ninterface GetMarkColorInput {\n  color: MantineColor | string | undefined;\n  theme: MantineTheme;\n  defaultShade: number;\n}\n\nexport function getMarkColor({ color, theme, defaultShade }: GetMarkColorInput) {\n  const parsed = parseThemeColor({ color, theme });\n\n  if (!parsed.isThemeColor) {\n    return color;\n  }\n\n  if (parsed.shade === undefined) {\n    return `var(--mantine-color-${parsed.color}-${defaultShade})`;\n  }\n\n  return `var(${parsed.variable})`;\n}\n"],"mappings":";;;AACO,SAASA,YAAYA,CAAAC,IAAA,EAAiC;EAAA,IAAhC;IAAEC,KAAK;IAAEC,KAAK;IAAEC;EAAY,CAAE,GAAAH,IAAA;EACzD,MAAMI,MAAM,GAAGC,eAAe,CAAC;IAAEJ,KAAK;IAAEC;EAAK,CAAE,CAAC;EAChD,IAAI,CAACE,MAAM,CAACE,YAAY,EAAE;IACxB,OAAOL,KAAK;EAChB;EACE,IAAIG,MAAM,CAACG,KAAK,KAAK,KAAK,CAAC,EAAE;IAC3B,8BAAAC,MAAA,CAA8BJ,MAAM,CAACH,KAAK,OAAAO,MAAA,CAAIL,YAAY;EAC9D;EACE,cAAAK,MAAA,CAAcJ,MAAM,CAACK,QAAQ;AAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}