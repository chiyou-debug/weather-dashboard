{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{Container,Card,Text,Title,Group,Loader}from'@mantine/core';import{useInterval}from'@mantine/hooks';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const App=()=>{const[weatherData,setWeatherData]=useState(null);const[loading,setLoading]=useState(true);const fetchWeatherData=async()=>{try{const apiKey='cd2664cf621ec9dc02b8612f38822811';// 替换为你的 API 密钥\nconst response=await axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=London&appid=\".concat(apiKey));setWeatherData(response.data);}catch(error){console.error('Error fetching weather data:',error);}finally{setLoading(false);}};useInterval(()=>{fetchWeatherData();},600000);// 更新频率，这里设置为每10分钟更新一次天气数据\nuseEffect(()=>{fetchWeatherData();},[]);return/*#__PURE__*/_jsx(Container,{size:\"xs\",padding:\"md\",children:/*#__PURE__*/_jsx(Card,{shadow:\"sm\",padding:\"lg\",children:/*#__PURE__*/_jsxs(Group,{direction:\"column\",position:\"center\",spacing:\"md\",children:[/*#__PURE__*/_jsx(Title,{order:2,children:\"Weather Dashboard\"}),loading?/*#__PURE__*/_jsx(Loader,{}):weatherData&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{size:\"lg\",weight:500,children:weatherData.name}),/*#__PURE__*/_jsxs(Text,{size:\"sm\",children:[\"Temperature: \",(weatherData.main.temp-273.15).toFixed(2),\"\\xB0C\"]}),/*#__PURE__*/_jsxs(Text,{size:\"sm\",children:[\"Humidity: \",weatherData.main.humidity,\"%\"]}),/*#__PURE__*/_jsxs(Text,{size:\"sm\",children:[\"Wind Speed: \",weatherData.wind.speed,\" m/s\"]})]})]})})});};export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Card","Text","Title","Group","Loader","useInterval","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","weatherData","setWeatherData","loading","setLoading","fetchWeatherData","apiKey","response","get","concat","data","error","console","size","padding","children","shadow","direction","position","spacing","order","weight","name","main","temp","toFixed","humidity","wind","speed"],"sources":["/home/alan/code/my-weather-dashboard/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Card, Text, Title, Group, Loader } from '@mantine/core';\nimport { useInterval } from '@mantine/hooks';\n\nconst App = () => {\n  const [weatherData, setWeatherData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const fetchWeatherData = async () => {\n    try {\n      const apiKey = 'cd2664cf621ec9dc02b8612f38822811'; // 替换为你的 API 密钥\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=London&appid=${apiKey}`);\n      setWeatherData(response.data);\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useInterval(() => {\n    fetchWeatherData();\n  }, 600000); // 更新频率，这里设置为每10分钟更新一次天气数据\n\n  useEffect(() => {\n    fetchWeatherData();\n  }, []);\n\n  return (\n    <Container size=\"xs\" padding=\"md\">\n      <Card shadow=\"sm\" padding=\"lg\">\n        <Group direction=\"column\" position=\"center\" spacing=\"md\">\n          <Title order={2}>Weather Dashboard</Title>\n          {loading ? (\n            <Loader />\n          ) : (\n            weatherData && (\n              <>\n                <Text size=\"lg\" weight={500}>\n                  {weatherData.name}\n                </Text>\n                <Text size=\"sm\">Temperature: {(weatherData.main.temp - 273.15).toFixed(2)}°C</Text>\n                <Text size=\"sm\">Humidity: {weatherData.main.humidity}%</Text>\n                <Text size=\"sm\">Wind Speed: {weatherData.wind.speed} m/s</Text>\n              </>\n            )\n          )}\n        </Group>\n      </Card>\n    </Container>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,SAAS,CAAEC,IAAI,CAAEC,IAAI,CAAEC,KAAK,CAAEC,KAAK,CAAEC,MAAM,KAAQ,eAAe,CAC3E,OAASC,WAAW,KAAQ,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAE7C,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGlB,QAAQ,CAAC,IAAI,CAAC,CACpD,KAAM,CAACmB,OAAO,CAAEC,UAAU,CAAC,CAAGpB,QAAQ,CAAC,IAAI,CAAC,CAE5C,KAAM,CAAAqB,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF,KAAM,CAAAC,MAAM,CAAG,kCAAkC,CAAE;AACnD,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAArB,KAAK,CAACsB,GAAG,mEAAAC,MAAA,CAAmEH,MAAM,CAAE,CAAC,CAC5GJ,cAAc,CAACK,QAAQ,CAACG,IAAI,CAAC,CAC/B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACtD,CAAC,OAAS,CACRP,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDX,WAAW,CAAC,IAAM,CAChBY,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAAE,MAAM,CAAC,CAAE;AAEZpB,SAAS,CAAC,IAAM,CACdoB,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEV,IAAA,CAACR,SAAS,EAAC0B,IAAI,CAAC,IAAI,CAACC,OAAO,CAAC,IAAI,CAAAC,QAAA,cAC/BpB,IAAA,CAACP,IAAI,EAAC4B,MAAM,CAAC,IAAI,CAACF,OAAO,CAAC,IAAI,CAAAC,QAAA,cAC5BlB,KAAA,CAACN,KAAK,EAAC0B,SAAS,CAAC,QAAQ,CAACC,QAAQ,CAAC,QAAQ,CAACC,OAAO,CAAC,IAAI,CAAAJ,QAAA,eACtDpB,IAAA,CAACL,KAAK,EAAC8B,KAAK,CAAE,CAAE,CAAAL,QAAA,CAAC,mBAAiB,CAAO,CAAC,CACzCZ,OAAO,cACNR,IAAA,CAACH,MAAM,GAAE,CAAC,CAEVS,WAAW,eACTJ,KAAA,CAAAE,SAAA,EAAAgB,QAAA,eACEpB,IAAA,CAACN,IAAI,EAACwB,IAAI,CAAC,IAAI,CAACQ,MAAM,CAAE,GAAI,CAAAN,QAAA,CACzBd,WAAW,CAACqB,IAAI,CACb,CAAC,cACPzB,KAAA,CAACR,IAAI,EAACwB,IAAI,CAAC,IAAI,CAAAE,QAAA,EAAC,eAAa,CAAC,CAACd,WAAW,CAACsB,IAAI,CAACC,IAAI,CAAG,MAAM,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAE,EAAM,CAAC,cACnF5B,KAAA,CAACR,IAAI,EAACwB,IAAI,CAAC,IAAI,CAAAE,QAAA,EAAC,YAAU,CAACd,WAAW,CAACsB,IAAI,CAACG,QAAQ,CAAC,GAAC,EAAM,CAAC,cAC7D7B,KAAA,CAACR,IAAI,EAACwB,IAAI,CAAC,IAAI,CAAAE,QAAA,EAAC,cAAY,CAACd,WAAW,CAAC0B,IAAI,CAACC,KAAK,CAAC,MAAI,EAAM,CAAC,EAC/D,CAEL,EACI,CAAC,CACJ,CAAC,CACE,CAAC,CAEhB,CAAC,CAED,cAAe,CAAA5B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}