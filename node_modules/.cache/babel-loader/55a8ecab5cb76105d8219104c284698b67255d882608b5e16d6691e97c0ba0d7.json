{"ast":null,"code":"var _jsxFileName = \"/home/alan/weather-dashboard/src/components/WeatherDashboard.js\",\n  _s = $RefreshSig$();\n// src/components/WeatherDashboard.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport WeatherCard from './WeatherCard';\nimport WeatherChart from './WeatherChart';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'cd2664cf621ec9dc02b8612f38822811'; // 天气API密钥\n\nconst WeatherDashboard = () => {\n  _s();\n  const [location, setLocation] = useState('New York'); // 默认地点\n  const [weatherData, setWeatherData] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${API_KEY}`);\n        setWeatherData(response.data);\n      } catch (error) {\n        // 处理错误，可以显示之前的天气数据或提示用户\n        console.error('天气数据获取失败', error);\n      }\n    };\n    fetchWeatherData();\n  }, [location]);\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u5929\\u6C14\\u9884\\u62A5\\u770B\\u677F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-input\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u8F93\\u5165\\u5730\\u70B9\",\n        value: location,\n        onChange: e => setLocation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(WeatherCard, {\n      weatherData: weatherData,\n      selectedDate: selectedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-picker\",\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: selectedDate,\n        onChange: handleDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(WeatherChart, {\n      location: location,\n      selectedDate: selectedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherDashboard, \"89pWCtwAnEvCs49tyqz+PIGRkC4=\");\n_c = WeatherDashboard;\nexport default WeatherDashboard;\nvar _c;\n$RefreshReg$(_c, \"WeatherDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","WeatherCard","WeatherChart","DatePicker","jsxDEV","_jsxDEV","API_KEY","WeatherDashboard","_s","location","setLocation","weatherData","setWeatherData","selectedDate","setSelectedDate","Date","fetchWeatherData","response","get","data","error","console","handleDateChange","date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","selected","_c","$RefreshReg$"],"sources":["/home/alan/weather-dashboard/src/components/WeatherDashboard.js"],"sourcesContent":["// src/components/WeatherDashboard.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport WeatherCard from './WeatherCard';\nimport WeatherChart from './WeatherChart';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst API_KEY = 'cd2664cf621ec9dc02b8612f38822811'; // 天气API密钥\n\nconst WeatherDashboard = () => {\n  const [location, setLocation] = useState('New York'); // 默认地点\n  const [weatherData, setWeatherData] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${API_KEY}`\n        );\n        setWeatherData(response.data);\n      } catch (error) {\n        // 处理错误，可以显示之前的天气数据或提示用户\n        console.error('天气数据获取失败', error);\n      }\n    };\n\n    fetchWeatherData();\n  }, [location]);\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  return (\n    <div className=\"weather-dashboard\">\n      <h1>天气预报看板</h1>\n      <div className=\"location-input\">\n        <input\n          type=\"text\"\n          placeholder=\"输入地点\"\n          value={location}\n          onChange={(e) => setLocation(e.target.value)}\n        />\n      </div>\n      {weatherData && (\n        <WeatherCard\n          weatherData={weatherData}\n          selectedDate={selectedDate}\n        />\n      )}\n      <div className=\"date-picker\">\n        <DatePicker\n          selected={selectedDate}\n          onChange={handleDateChange}\n        />\n      </div>\n      {weatherData && (\n        <WeatherChart\n          location={location}\n          selectedDate={selectedDate}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default WeatherDashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}