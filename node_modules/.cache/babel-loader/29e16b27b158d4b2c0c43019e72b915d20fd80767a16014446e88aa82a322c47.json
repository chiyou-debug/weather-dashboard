{"ast":null,"code":"var _jsxFileName = \"/home/alan/weather-dashboard/src/components/WeatherChart.js\",\n  _s = $RefreshSig$();\n// src/components/WeatherChart.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'YOUR_API_KEY'; // 请替换成你自己的天气API密钥\n\nconst WeatherChart = ({\n  location,\n  selectedDate\n}) => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    const fetchWeatherChartData = async () => {\n      try {\n        const response = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${location}&appid=${API_KEY}`);\n        const chartData = {\n          labels: [],\n          datasets: [{\n            label: '温度 (°C)',\n            data: [],\n            fill: false,\n            borderColor: 'rgba(75,192,192,1)',\n            borderWidth: 2\n          }]\n        };\n        response.data.list.forEach(item => {\n          const date = new Date(item.dt * 1000);\n          chartData.labels.push(date.toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n          }));\n          chartData.datasets[0].data.push((item.main.temp - 273.15).toFixed(2));\n        });\n        setChartData(chartData);\n      } catch (error) {\n        console.error('天气图表数据获取失败', error);\n      }\n    };\n    fetchWeatherChartData();\n  }, [location, selectedDate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-chart\",\n    children: chartData && /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: {\n        scales: {\n          x: {\n            type: 'time',\n            time: {\n              unit: 'hour',\n              stepSize: 3,\n              displayFormats: {\n                hour: 'HH:mm'\n              }\n            }\n          },\n          y: {\n            beginAtZero: true\n          }\n        },\n        plugins: {\n          legend: {\n            display: false // 隐藏图例\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherChart, \"9euvDhZ+n6eLTlbzwvHmNPhoqAw=\");\n_c = WeatherChart;\nexport default WeatherChart;\nvar _c;\n$RefreshReg$(_c, \"WeatherChart\");","map":{"version":3,"names":["React","useState","useEffect","axios","Line","jsxDEV","_jsxDEV","API_KEY","WeatherChart","location","selectedDate","_s","chartData","setChartData","fetchWeatherChartData","response","get","labels","datasets","label","data","fill","borderColor","borderWidth","list","forEach","item","date","Date","dt","push","toLocaleTimeString","hour","minute","main","temp","toFixed","error","console","className","children","options","scales","x","type","time","unit","stepSize","displayFormats","y","beginAtZero","plugins","legend","display","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/alan/weather-dashboard/src/components/WeatherChart.js"],"sourcesContent":["// src/components/WeatherChart.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\n\nconst API_KEY = 'YOUR_API_KEY'; // 请替换成你自己的天气API密钥\n\nconst WeatherChart = ({ location, selectedDate }) => {\n  const [chartData, setChartData] = useState(null);\n\n  useEffect(() => {\n    const fetchWeatherChartData = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.openweathermap.org/data/2.5/forecast?q=${location}&appid=${API_KEY}`\n        );\n\n        const chartData = {\n          labels: [],\n          datasets: [\n            {\n              label: '温度 (°C)',\n              data: [],\n              fill: false,\n              borderColor: 'rgba(75,192,192,1)',\n              borderWidth: 2,\n            },\n          ],\n        };\n\n        response.data.list.forEach((item) => {\n          const date = new Date(item.dt * 1000);\n          chartData.labels.push(date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }));\n          chartData.datasets[0].data.push((item.main.temp - 273.15).toFixed(2));\n        });\n\n        setChartData(chartData);\n      } catch (error) {\n        console.error('天气图表数据获取失败', error);\n      }\n    };\n\n    fetchWeatherChartData();\n  }, [location, selectedDate]);\n\n  return (\n    <div className=\"weather-chart\">\n      {chartData && (\n        <Line\n          data={chartData}\n          options={{\n            scales: {\n              x: {\n                type: 'time',\n                time: {\n                  unit: 'hour',\n                  stepSize: 3,\n                  displayFormats: {\n                    hour: 'HH:mm',\n                  },\n                },\n              },\n              y: {\n                beginAtZero: true,\n              },\n            },\n            plugins: {\n              legend: {\n                display: false, // 隐藏图例\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default WeatherChart;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,OAAO,GAAG,cAAc,CAAC,CAAC;;AAEhC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMY,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACxC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAC7B,sDAAqDP,QAAS,UAASF,OAAQ,EAClF,CAAC;QAED,MAAMK,SAAS,GAAG;UAChBK,MAAM,EAAE,EAAE;UACVC,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,SAAS;YAChBC,IAAI,EAAE,EAAE;YACRC,IAAI,EAAE,KAAK;YACXC,WAAW,EAAE,oBAAoB;YACjCC,WAAW,EAAE;UACf,CAAC;QAEL,CAAC;QAEDR,QAAQ,CAACK,IAAI,CAACI,IAAI,CAACC,OAAO,CAAEC,IAAI,IAAK;UACnC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,IAAI,CAACG,EAAE,GAAG,IAAI,CAAC;UACrCjB,SAAS,CAACK,MAAM,CAACa,IAAI,CAACH,IAAI,CAACI,kBAAkB,CAAC,EAAE,EAAE;YAAEC,IAAI,EAAE,SAAS;YAAEC,MAAM,EAAE;UAAU,CAAC,CAAC,CAAC;UAC1FrB,SAAS,CAACM,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,CAACU,IAAI,CAAC,CAACJ,IAAI,CAACQ,IAAI,CAACC,IAAI,GAAG,MAAM,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAC;QACvE,CAAC,CAAC;QAEFvB,YAAY,CAACD,SAAS,CAAC;MACzB,CAAC,CAAC,OAAOyB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;MACpC;IACF,CAAC;IAEDvB,qBAAqB,CAAC,CAAC;EACzB,CAAC,EAAE,CAACL,QAAQ,EAAEC,YAAY,CAAC,CAAC;EAE5B,oBACEJ,OAAA;IAAKiC,SAAS,EAAC,eAAe;IAAAC,QAAA,EAC3B5B,SAAS,iBACRN,OAAA,CAACF,IAAI;MACHgB,IAAI,EAAER,SAAU;MAChB6B,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,IAAI,EAAE,MAAM;YACZC,IAAI,EAAE;cACJC,IAAI,EAAE,MAAM;cACZC,QAAQ,EAAE,CAAC;cACXC,cAAc,EAAE;gBACdhB,IAAI,EAAE;cACR;YACF;UACF,CAAC;UACDiB,CAAC,EAAE;YACDC,WAAW,EAAE;UACf;QACF,CAAC;QACDC,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,OAAO,EAAE,KAAK,CAAE;UAClB;QACF;MACF;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9C,EAAA,CArEIH,YAAY;AAAAkD,EAAA,GAAZlD,YAAY;AAuElB,eAAeA,YAAY;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}