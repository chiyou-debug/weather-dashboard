{"ast":null,"code":"'use client';\n\nimport { useCallback, useState, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event.mjs';\nfunction serializeJSON(value, hookName) {\n  try {\n    return JSON.stringify(value);\n  } catch (error) {\n    throw new Error(\"@mantine/hooks \".concat(hookName, \": Failed to serialize the value\"));\n  }\n}\nfunction deserializeJSON(value) {\n  try {\n    return value && JSON.parse(value);\n  } catch (e) {\n    return value;\n  }\n}\nfunction createStorageHandler(type) {\n  const getItem = key => {\n    try {\n      return window[type].getItem(key);\n    } catch (error) {\n      console.warn(\"use-local-storage: Failed to get value from storage, localStorage is blocked\");\n      return null;\n    }\n  };\n  const setItem = (key, value) => {\n    try {\n      window[type].setItem(key, value);\n    } catch (error) {\n      console.warn(\"use-local-storage: Failed to set value to storage, localStorage is blocked\");\n    }\n  };\n  const removeItem = key => {\n    try {\n      window[type].removeItem(key);\n    } catch (error) {\n      console.warn(\"use-local-storage: Failed to remove value from storage, localStorage is blocked\");\n    }\n  };\n  return {\n    getItem,\n    setItem,\n    removeItem\n  };\n}\nfunction createStorage(type, hookName) {\n  const eventName = type === \"localStorage\" ? \"mantine-local-storage\" : \"mantine-session-storage\";\n  const {\n    getItem,\n    setItem,\n    removeItem\n  } = createStorageHandler(type);\n  return function useStorage(_ref) {\n    let {\n      key,\n      defaultValue,\n      getInitialValueInEffect = true,\n      deserialize = deserializeJSON,\n      serialize = value => serializeJSON(value, hookName)\n    } = _ref;\n    const readStorageValue = useCallback(skipStorage => {\n      let storageBlockedOrSkipped;\n      try {\n        storageBlockedOrSkipped = typeof window === \"undefined\" || !(type in window) || window[type] === null || !!skipStorage;\n      } catch (_e) {\n        storageBlockedOrSkipped = true;\n      }\n      if (storageBlockedOrSkipped) {\n        return defaultValue;\n      }\n      const storageValue = getItem(key);\n      return storageValue !== null ? deserialize(storageValue) : defaultValue;\n    }, [key, defaultValue]);\n    const [value, setValue] = useState(readStorageValue(getInitialValueInEffect));\n    const setStorageValue = useCallback(val => {\n      if (val instanceof Function) {\n        setValue(current => {\n          const result = val(current);\n          setItem(key, serialize(result));\n          window.dispatchEvent(new CustomEvent(eventName, {\n            detail: {\n              key,\n              value: val(current)\n            }\n          }));\n          return result;\n        });\n      } else {\n        setItem(key, serialize(val));\n        window.dispatchEvent(new CustomEvent(eventName, {\n          detail: {\n            key,\n            value: val\n          }\n        }));\n        setValue(val);\n      }\n    }, [key]);\n    const removeStorageValue = useCallback(() => {\n      removeItem(key);\n      window.dispatchEvent(new CustomEvent(eventName, {\n        detail: {\n          key,\n          value: defaultValue\n        }\n      }));\n    }, []);\n    useWindowEvent(\"storage\", event => {\n      var _a;\n      if (event.storageArea === window[type] && event.key === key) {\n        setValue(deserialize((_a = event.newValue) != null ? _a : void 0));\n      }\n    });\n    useWindowEvent(eventName, event => {\n      if (event.detail.key === key) {\n        setValue(event.detail.value);\n      }\n    });\n    useEffect(() => {\n      if (defaultValue !== void 0 && value === void 0) {\n        setStorageValue(defaultValue);\n      }\n    }, [defaultValue, value, setStorageValue]);\n    useEffect(() => {\n      if (getInitialValueInEffect) {\n        setValue(readStorageValue());\n      }\n    }, []);\n    return [value === void 0 ? defaultValue : value, setStorageValue, removeStorageValue];\n  };\n}\nexport { createStorage };","map":{"version":3,"names":["serializeJSON","value","hookName","JSON","stringify","error","Error","concat","deserializeJSON","parse","e","createStorageHandler","type","getItem","key","window","console","warn","setItem","removeItem","createStorage","eventName","useStorage","_ref","defaultValue","getInitialValueInEffect","deserialize","serialize","readStorageValue","useCallback","skipStorage","storageBlockedOrSkipped","_e","storageValue","setValue","useState","setStorageValue","val","Function","current","result","dispatchEvent","CustomEvent","detail","removeStorageValue","useWindowEvent","event","_a","storageArea","newValue","useEffect"],"sources":["/home/alan/code/my-weather-dashboard/node_modules/@mantine/hooks/src/use-local-storage/create-storage.ts"],"sourcesContent":["/* eslint-disable no-console */\nimport { useState, useCallback, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event';\n\nexport type StorageType = 'localStorage' | 'sessionStorage';\n\nexport interface StorageProperties<T> {\n  /** Storage key */\n  key: string;\n\n  /** Default value that will be set if value is not found in storage */\n  defaultValue?: T;\n\n  /** If set to true, value will be update is useEffect after mount */\n  getInitialValueInEffect?: boolean;\n\n  /** Function to serialize value into string to be save in storage */\n  serialize?: (value: T) => string;\n\n  /** Function to deserialize string value from storage to value */\n  deserialize?: (value: string | undefined) => T;\n}\n\nfunction serializeJSON<T>(value: T, hookName: string) {\n  try {\n    return JSON.stringify(value);\n  } catch (error) {\n    throw new Error(`@mantine/hooks ${hookName}: Failed to serialize the value`);\n  }\n}\n\nfunction deserializeJSON(value: string | undefined) {\n  try {\n    return value && JSON.parse(value);\n  } catch {\n    return value;\n  }\n}\n\nfunction createStorageHandler(type: StorageType) {\n  const getItem = (key: string) => {\n    try {\n      return window[type].getItem(key);\n    } catch (error) {\n      console.warn('use-local-storage: Failed to get value from storage, localStorage is blocked');\n      return null;\n    }\n  };\n\n  const setItem = (key: string, value: string) => {\n    try {\n      window[type].setItem(key, value);\n    } catch (error) {\n      console.warn('use-local-storage: Failed to set value to storage, localStorage is blocked');\n    }\n  };\n\n  const removeItem = (key: string) => {\n    try {\n      window[type].removeItem(key);\n    } catch (error) {\n      console.warn(\n        'use-local-storage: Failed to remove value from storage, localStorage is blocked'\n      );\n    }\n  };\n\n  return { getItem, setItem, removeItem };\n}\n\nexport function createStorage<T>(type: StorageType, hookName: string) {\n  const eventName = type === 'localStorage' ? 'mantine-local-storage' : 'mantine-session-storage';\n  const { getItem, setItem, removeItem } = createStorageHandler(type);\n\n  return function useStorage({\n    key,\n    defaultValue,\n    getInitialValueInEffect = true,\n    deserialize = deserializeJSON,\n    serialize = (value: T) => serializeJSON(value, hookName),\n  }: StorageProperties<T>) {\n    const readStorageValue = useCallback(\n      (skipStorage?: boolean): T => {\n        let storageBlockedOrSkipped;\n\n        try {\n          storageBlockedOrSkipped =\n            typeof window === 'undefined' ||\n            !(type in window) ||\n            window[type] === null ||\n            !!skipStorage;\n        } catch (_e) {\n          storageBlockedOrSkipped = true;\n        }\n\n        if (storageBlockedOrSkipped) {\n          return defaultValue as T;\n        }\n\n        const storageValue = getItem(key);\n        return storageValue !== null ? deserialize(storageValue) : (defaultValue as T);\n      },\n      [key, defaultValue]\n    );\n\n    const [value, setValue] = useState<T>(readStorageValue(getInitialValueInEffect));\n\n    const setStorageValue = useCallback(\n      (val: T | ((prevState: T) => T)) => {\n        if (val instanceof Function) {\n          setValue((current) => {\n            const result = val(current);\n            setItem(key, serialize(result));\n            window.dispatchEvent(\n              new CustomEvent(eventName, { detail: { key, value: val(current) } })\n            );\n            return result;\n          });\n        } else {\n          setItem(key, serialize(val));\n          window.dispatchEvent(new CustomEvent(eventName, { detail: { key, value: val } }));\n          setValue(val);\n        }\n      },\n      [key]\n    );\n\n    const removeStorageValue = useCallback(() => {\n      removeItem(key);\n      window.dispatchEvent(new CustomEvent(eventName, { detail: { key, value: defaultValue } }));\n    }, []);\n\n    useWindowEvent('storage', (event) => {\n      if (event.storageArea === window[type] && event.key === key) {\n        setValue(deserialize(event.newValue ?? undefined));\n      }\n    });\n\n    useWindowEvent(eventName, (event) => {\n      if (event.detail.key === key) {\n        setValue(event.detail.value);\n      }\n    });\n\n    useEffect(() => {\n      if (defaultValue !== undefined && value === undefined) {\n        setStorageValue(defaultValue);\n      }\n    }, [defaultValue, value, setStorageValue]);\n\n    useEffect(() => {\n      if (getInitialValueInEffect) {\n        setValue(readStorageValue());\n      }\n    }, []);\n\n    return [value === undefined ? defaultValue : value, setStorageValue, removeStorageValue] as [\n      T,\n      (val: T | ((prevState: T) => T)) => void,\n      () => void,\n    ];\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}