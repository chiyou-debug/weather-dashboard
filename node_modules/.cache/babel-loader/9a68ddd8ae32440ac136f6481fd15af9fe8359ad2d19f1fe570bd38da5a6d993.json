{"ast":null,"code":"'use client';\n\nimport { round } from './parsers.mjs';\nfunction hsvaToRgbaObject(_ref) {\n  let {\n    h,\n    s,\n    v,\n    a\n  } = _ref;\n  const _h = h / 360 * 6;\n  const _s = s / 100;\n  const _v = v / 100;\n  const hh = Math.floor(_h);\n  const l = _v * (1 - _s);\n  const c = _v * (1 - (_h - hh) * _s);\n  const d = _v * (1 - (1 - _h + hh) * _s);\n  const module = hh % 6;\n  return {\n    r: round([_v, c, l, l, d, _v][module] * 255),\n    g: round([d, _v, _v, c, l, l][module] * 255),\n    b: round([l, l, d, _v, _v, c][module] * 255),\n    a: round(a, 2)\n  };\n}\nfunction hsvaToRgba(color, includeAlpha) {\n  const {\n    r,\n    g,\n    b,\n    a\n  } = hsvaToRgbaObject(color);\n  if (!includeAlpha) {\n    return \"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\");\n  }\n  return \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", \").concat(round(a, 2), \")\");\n}\nfunction hsvaToHsl(_ref2, includeAlpha) {\n  let {\n    h,\n    s,\n    v,\n    a\n  } = _ref2;\n  const hh = (200 - s) * v / 100;\n  const result = {\n    h: Math.round(h),\n    s: Math.round(hh > 0 && hh < 200 ? s * v / 100 / (hh <= 100 ? hh : 200 - hh) * 100 : 0),\n    l: Math.round(hh / 2)\n  };\n  if (!includeAlpha) {\n    return \"hsl(\".concat(result.h, \", \").concat(result.s, \"%, \").concat(result.l, \"%)\");\n  }\n  return \"hsla(\".concat(result.h, \", \").concat(result.s, \"%, \").concat(result.l, \"%, \").concat(round(a, 2), \")\");\n}\nfunction formatHexPart(number) {\n  const hex = number.toString(16);\n  return hex.length < 2 ? \"0\".concat(hex) : hex;\n}\nfunction hsvaToHex(color) {\n  const {\n    r,\n    g,\n    b\n  } = hsvaToRgbaObject(color);\n  return \"#\".concat(formatHexPart(r)).concat(formatHexPart(g)).concat(formatHexPart(b));\n}\nfunction hsvaToHexa(color) {\n  const a = Math.round(color.a * 255);\n  return \"\".concat(hsvaToHex(color)).concat(formatHexPart(a));\n}\nconst CONVERTERS = {\n  hex: hsvaToHex,\n  hexa: color => hsvaToHexa(color),\n  rgb: color => hsvaToRgba(color, false),\n  rgba: color => hsvaToRgba(color, true),\n  hsl: color => hsvaToHsl(color, false),\n  hsla: color => hsvaToHsl(color, true)\n};\nfunction convertHsvaTo(format, color) {\n  if (!color) {\n    return \"#000000\";\n  }\n  if (!(format in CONVERTERS)) {\n    return CONVERTERS.hex(color);\n  }\n  return CONVERTERS[format](color);\n}\nexport { convertHsvaTo, hsvaToHex, hsvaToHexa, hsvaToHsl, hsvaToRgba, hsvaToRgbaObject };","map":{"version":3,"names":["hsvaToRgbaObject","_ref","h","s","v","a","_h","_s","_v","hh","Math","floor","l","c","d","module","r","round","g","b","hsvaToRgba","color","includeAlpha","concat","hsvaToHsl","_ref2","result","formatHexPart","number","hex","toString","length","hsvaToHex","hsvaToHexa","CONVERTERS","hexa","rgb","rgba","hsl","hsla","convertHsvaTo","format"],"sources":["/home/alan/code/my-weather-dashboard/node_modules/@mantine/core/src/components/ColorPicker/converters/converters.ts"],"sourcesContent":["import { HsvaColor, RgbaColor, ColorFormat } from '../ColorPicker.types';\nimport { round } from './parsers';\n\nexport function hsvaToRgbaObject({ h, s, v, a }: HsvaColor): RgbaColor {\n  const _h = (h / 360) * 6;\n  const _s = s / 100;\n  const _v = v / 100;\n\n  const hh = Math.floor(_h);\n  const l = _v * (1 - _s);\n  const c = _v * (1 - (_h - hh) * _s);\n  const d = _v * (1 - (1 - _h + hh) * _s);\n  const module = hh % 6;\n\n  return {\n    r: round([_v, c, l, l, d, _v][module] * 255),\n    g: round([d, _v, _v, c, l, l][module] * 255),\n    b: round([l, l, d, _v, _v, c][module] * 255),\n    a: round(a, 2),\n  };\n}\n\nexport function hsvaToRgba(color: HsvaColor, includeAlpha: boolean) {\n  const { r, g, b, a } = hsvaToRgbaObject(color);\n\n  if (!includeAlpha) {\n    return `rgb(${r}, ${g}, ${b})`;\n  }\n\n  return `rgba(${r}, ${g}, ${b}, ${round(a, 2)})`;\n}\n\nexport function hsvaToHsl({ h, s, v, a }: HsvaColor, includeAlpha: boolean) {\n  const hh = ((200 - s) * v) / 100;\n\n  const result = {\n    h: Math.round(h),\n    s: Math.round(hh > 0 && hh < 200 ? ((s * v) / 100 / (hh <= 100 ? hh : 200 - hh)) * 100 : 0),\n    l: Math.round(hh / 2),\n  };\n\n  if (!includeAlpha) {\n    return `hsl(${result.h}, ${result.s}%, ${result.l}%)`;\n  }\n\n  return `hsla(${result.h}, ${result.s}%, ${result.l}%, ${round(a, 2)})`;\n}\n\nfunction formatHexPart(number: number) {\n  const hex = number.toString(16);\n  return hex.length < 2 ? `0${hex}` : hex;\n}\n\nexport function hsvaToHex(color: HsvaColor) {\n  const { r, g, b } = hsvaToRgbaObject(color);\n  return `#${formatHexPart(r)}${formatHexPart(g)}${formatHexPart(b)}`;\n}\n\nexport function hsvaToHexa(color: HsvaColor) {\n  const a = Math.round(color.a * 255);\n\n  return `${hsvaToHex(color)}${formatHexPart(a)}`;\n}\n\nconst CONVERTERS: Record<ColorFormat, (color: HsvaColor) => string> = {\n  hex: hsvaToHex,\n  hexa: (color) => hsvaToHexa(color),\n  rgb: (color) => hsvaToRgba(color, false),\n  rgba: (color) => hsvaToRgba(color, true),\n  hsl: (color) => hsvaToHsl(color, false),\n  hsla: (color) => hsvaToHsl(color, true),\n};\n\nexport function convertHsvaTo(format: ColorFormat, color: HsvaColor) {\n  if (!color) {\n    return '#000000';\n  }\n\n  if (!(format in CONVERTERS)) {\n    return CONVERTERS.hex(color);\n  }\n\n  return CONVERTERS[format](color);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}