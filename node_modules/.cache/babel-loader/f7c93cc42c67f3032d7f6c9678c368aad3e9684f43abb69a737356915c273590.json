{"ast":null,"code":"function scaleRem(remValue) {\n  return \"calc(\".concat(remValue, \" * var(--mantine-scale))\");\n}\nfunction createConverter(units) {\n  let {\n    shouldScale = false\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  function converter(value) {\n    if (value === 0 || value === \"0\") {\n      return \"0\";\n    }\n    if (typeof value === \"number\") {\n      const val = \"\".concat(value / 16).concat(units);\n      return shouldScale ? scaleRem(val) : val;\n    }\n    if (typeof value === \"string\") {\n      if (value.startsWith(\"calc(\") || value.startsWith(\"var(\")) {\n        return value;\n      }\n      if (value.includes(\" \")) {\n        return value.split(\" \").map(val => converter(val)).join(\" \");\n      }\n      if (value.includes(units)) {\n        return shouldScale ? scaleRem(value) : value;\n      }\n      const replaced = value.replace(\"px\", \"\");\n      if (!Number.isNaN(Number(replaced))) {\n        const val = \"\".concat(Number(replaced) / 16).concat(units);\n        return shouldScale ? scaleRem(val) : val;\n      }\n    }\n    return value;\n  }\n  return converter;\n}\nconst rem = createConverter(\"rem\", {\n  shouldScale: true\n});\nconst em = createConverter(\"em\");\nexport { em, rem };","map":{"version":3,"names":["scaleRem","remValue","concat","createConverter","units","shouldScale","arguments","length","undefined","converter","value","val","startsWith","includes","split","map","join","replaced","replace","Number","isNaN","rem","em"],"sources":["/home/alan/code/my-weather-dashboard/node_modules/@mantine/core/src/core/utils/units-converters/rem.ts"],"sourcesContent":["function scaleRem(remValue: string) {\n  return `calc(${remValue} * var(--mantine-scale))`;\n}\n\nfunction createConverter(units: string, { shouldScale = false } = {}) {\n  function converter(value: unknown): string {\n    if (value === 0 || value === '0') {\n      return '0';\n    }\n\n    if (typeof value === 'number') {\n      const val = `${value / 16}${units}`;\n      return shouldScale ? scaleRem(val) : val;\n    }\n\n    if (typeof value === 'string') {\n      if (value.startsWith('calc(') || value.startsWith('var(')) {\n        return value;\n      }\n\n      if (value.includes(' ')) {\n        return value\n          .split(' ')\n          .map((val) => converter(val))\n          .join(' ');\n      }\n\n      if (value.includes(units)) {\n        return shouldScale ? scaleRem(value) : value;\n      }\n\n      const replaced = value.replace('px', '');\n      if (!Number.isNaN(Number(replaced))) {\n        const val = `${Number(replaced) / 16}${units}`;\n        return shouldScale ? scaleRem(val) : val;\n      }\n    }\n\n    return value as string;\n  }\n\n  return converter;\n}\n\nexport const rem = createConverter('rem', { shouldScale: true });\nexport const em = createConverter('em');\n"],"mappings":"AAAA,SAASA,QAAQA,CAACC,QAAQ,EAAE;EAC1B,eAAAC,MAAA,CAAeD,QAAQ;AACzB;AACA,SAASE,eAAeA,CAACC,KAAK,EAAgC;EAAA,IAA9B;IAAEC,WAAW,GAAG;EAAK,CAAE,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAC1D,SAASG,SAASA,CAACC,KAAK,EAAE;IACxB,IAAIA,KAAK,KAAK,CAAC,IAAIA,KAAK,KAAK,GAAG,EAAE;MAChC,OAAO,GAAG;IAChB;IACI,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC7B,MAAMC,GAAG,MAAAT,MAAA,CAAMQ,KAAK,GAAG,EAAE,EAAAR,MAAA,CAAGE,KAAK,CAAE;MACnC,OAAOC,WAAW,GAAGL,QAAQ,CAACW,GAAG,CAAC,GAAGA,GAAG;IAC9C;IACI,IAAI,OAAOD,KAAK,KAAK,QAAQ,EAAE;MAC7B,IAAIA,KAAK,CAACE,UAAU,CAAC,OAAO,CAAC,IAAIF,KAAK,CAACE,UAAU,CAAC,MAAM,CAAC,EAAE;QACzD,OAAOF,KAAK;MACpB;MACM,IAAIA,KAAK,CAACG,QAAQ,CAAC,GAAG,CAAC,EAAE;QACvB,OAAOH,KAAK,CAACI,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEJ,GAAG,IAAKF,SAAS,CAACE,GAAG,CAAC,CAAC,CAACK,IAAI,CAAC,GAAG,CAAC;MACtE;MACM,IAAIN,KAAK,CAACG,QAAQ,CAACT,KAAK,CAAC,EAAE;QACzB,OAAOC,WAAW,GAAGL,QAAQ,CAACU,KAAK,CAAC,GAAGA,KAAK;MACpD;MACM,MAAMO,QAAQ,GAAGP,KAAK,CAACQ,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;MACxC,IAAI,CAACC,MAAM,CAACC,KAAK,CAACD,MAAM,CAACF,QAAQ,CAAC,CAAC,EAAE;QACnC,MAAMN,GAAG,MAAAT,MAAA,CAAMiB,MAAM,CAACF,QAAQ,CAAC,GAAG,EAAE,EAAAf,MAAA,CAAGE,KAAK,CAAE;QAC9C,OAAOC,WAAW,GAAGL,QAAQ,CAACW,GAAG,CAAC,GAAGA,GAAG;MAChD;IACA;IACI,OAAOD,KAAK;EAChB;EACE,OAAOD,SAAS;AAClB;AACY,MAACY,GAAG,GAAGlB,eAAe,CAAC,KAAK,EAAE;EAAEE,WAAW,EAAE;AAAI,CAAE;AACnD,MAACiB,EAAE,GAAGnB,eAAe,CAAC,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}